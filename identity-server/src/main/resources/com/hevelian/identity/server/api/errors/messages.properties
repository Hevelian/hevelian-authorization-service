#Error Response messages.

#See https://github.com/jirutka/spring-rest-exception-handler#localizable-error-messages for more details.

#TODO make host of exception type configurable.

com.hevelian.identity.entitlement.pdp.PolicyParsingException.type = http://identity.hevelian.com/errors/xacml-policy-parsing-failed
com.hevelian.identity.entitlement.pdp.PolicyParsingException.title = Parsing of XACML policy failed
com.hevelian.identity.entitlement.pdp.PolicyParsingException.detail = XACML policy could not be parsed. It should be a valid XML document following the XACML Policy/PolicySet schema. See http://docs.oasis-open.org/xacml/3.0/xacml-3.0-core-spec-os-en.html#_Toc297001092 and http://docs.oasis-open.org/xacml/3.0/xacml-3.0-core-spec-os-en.html#_Toc297001079 for more details.

com.hevelian.identity.entitlement.PAPService$PAPPolicyNotFoundByPolicyIdException.type = http://identity.hevelian.com/errors/pap-policy-not-found
com.hevelian.identity.entitlement.PAPService$PAPPolicyNotFoundByPolicyIdException.title = Policy '#{ex.value}' not found in PAP.
com.hevelian.identity.entitlement.PAPService$PAPPolicyNotFoundByPolicyIdException.detail = No policy could be found by policy id '#{ex.value}' in PAP. Try to list all PAP policies and check the available ids.

com.hevelian.identity.entitlement.PAPService$PAPPoliciesNotFoundByPolicyIdsException.type = http://identity.hevelian.com/errors/pap-policies-not-found
com.hevelian.identity.entitlement.PAPService$PAPPoliciesNotFoundByPolicyIdsException.title = Policies '#{ex.value}' not found in PAP.
com.hevelian.identity.entitlement.PAPService$PAPPoliciesNotFoundByPolicyIdsException.detail = No policies could be found by policy ids '#{ex.value}' in PAP. Try to list all PAP policies and check the available ids.

com.hevelian.identity.entitlement.PDPService$PDPPolicyNotFoundByPolicyIdException.type = http://identity.hevelian.com/errors/pdp-policy-not-found
com.hevelian.identity.entitlement.PDPService$PDPPolicyNotFoundByPolicyIdException.title = Policy '#{ex.value}' not found in PDP.
com.hevelian.identity.entitlement.PDPService$PDPPolicyNotFoundByPolicyIdException.detail = No policy could be found by policy id '#{ex.value}' in PDP. Try to list all PDP policies and check the available ids.

com.hevelian.identity.entitlement.PDPService$PDPPoliciesNotFoundByPolicyIdsException.type = http://identity.hevelian.com/errors/pdp-policies-not-found
com.hevelian.identity.entitlement.PDPService$PDPPoliciesNotFoundByPolicyIdsException.title = Policies '#{ex.value}' not found in PDP.
com.hevelian.identity.entitlement.PDPService$PDPPoliciesNotFoundByPolicyIdsException.detail = No policies could be found by policy ids '#{ex.value}' in PDP. Try to list all PDP policies and check the available ids.

#TODO Create new exception for Request parsing exception since it is a parent for PolicyParsingException
org.wso2.balana.ParsingException.type = http://identity.hevelian.com/errors/xacml-parsing-failed
org.wso2.balana.ParsingException.title = Parsing of XACML request failed
org.wso2.balana.ParsingException.detail = XACML request could not be parsed. It should be a valid XML document following the XACML request schema. See http://docs.oasis-open.org/xacml/3.0/xacml-3.0-core-spec-os-en.html#_Toc297001120 for more details.

org.springframework.security.access.AccessDeniedException.type = https://httpstatuses.com/403
org.springframework.security.access.AccessDeniedException.title = Access forbidden
org.springframework.security.access.AccessDeniedException.detail = The server understood the request but refuses to authorize it. You have insufficient privileges to access this service. If you think you should have access then please contact your administrator.

com.hevelian.identity.core.TenantService$TenantNotFoundByDomainException.type = http://identity.hevelian.com/errors/tenant-not-found-by-domain
com.hevelian.identity.core.TenantService$TenantNotFoundByDomainException.title = Tenant not found by domain '#{ex.value}'
com.hevelian.identity.core.TenantService$TenantNotFoundByDomainException.detail = No tenant could be found by domain '#{ex.value}'. Try to list all tenants and check the available domains.

com.hevelian.identity.core.TenantService$TenantActiveAlreadyInStateException.type = http://identity.hevelian.com/errors/tenant-active-already-in-state
com.hevelian.identity.core.TenantService$TenantActiveAlreadyInStateException.title = Tenant active state is already '#{ex.active}'
com.hevelian.identity.core.TenantService$TenantActiveAlreadyInStateException.detail = Tenant active state cannot be set to '#{ex.active}' because it is already equal to this value. Retrieve the tenant info to get the current active state and other details about the requested tenant.

com.hevelian.identity.users.UserService$UserNotFoundByNameException.type = http://identity.hevelian.com/errors/user-not-found-by-name
com.hevelian.identity.users.UserService$UserNotFoundByNameException.title = User '#{ex.value}' not found.
com.hevelian.identity.users.UserService$UserNotFoundByNameException.detail = No user could be found by name '#{ex.value}'. Try to list all users and check the available names.

com.hevelian.identity.users.UserService$TenantAdminNotDeletableException.type = http://identity.hevelian.com/errors/tenant-admin-not-deletable
com.hevelian.identity.users.UserService$TenantAdminNotDeletableException.title = Tenant administrator '#{ex.userName}' cannot be deleted.
com.hevelian.identity.users.UserService$TenantAdminNotDeletableException.detail = User '#{ex.userName}' is a tenant administrator of tenant '#{ex.tenant}' and cannot be deleted. Tenant administrator can be deleted only as part of the corresponding tenant.


com.hevelian.identity.users.UserService$RoleNotFoundByNameException.type = http://identity.hevelian.com/errors/role-not-found-by-name
com.hevelian.identity.users.UserService$RoleNotFoundByNameException.title = Role '#{ex.value}' not found.
com.hevelian.identity.users.UserService$RoleNotFoundByNameException.detail = No role could be found by name '#{ex.value}'. Try to list all roles and check the available names.

com.hevelian.identity.users.UserService$RolesNotFoundByNameException.type = http://identity.hevelian.com/errors/roles-not-found-by-name
com.hevelian.identity.users.UserService$RolesNotFoundByNameException.title = Roles '#{ex.value}' not found.
com.hevelian.identity.users.UserService$RolesNotFoundByNameException.detail = Roles could not be found by names '#{ex.value}'. Try to list all roles and check the available names.

java.lang.Exception.type = http://identity.hevelian.com/errors/internal-server-error
java.lang.Exception.title = Internal Server Error
java.lang.Exception.detail = The server encountered an internal error or misconfiguration and was unable to complete your request.

#Override some default messages
org.springframework.web.bind.MethodArgumentNotValidException.type = http://identity.hevelian.com/errors/validation-failed
org.springframework.web.bind.MethodArgumentNotValidException.detail=The content you've sent contains #{ex.bindingResult.errorCount} validation errors.

javax.validation.ConstraintViolationException.type=http://identity.hevelian.com/errors/validation-failed
javax.validation.ConstraintViolationException.detail=The content you've sent contains #{ex.constraintViolations.size()} validation errors.

org.springframework.http.converter.HttpMessageNotReadableException.type=http://identity.hevelian.com/errors/conversion-failed
org.springframework.http.converter.HttpMessageNotReadableException.detail=The content you've sent is probably malformed.